
随机启动程序设置
/etc/rc.local 文件配置： 并且所有的程序还是脚本，需要在后台启动，
例如在/root/.docker/docker-ca1/startca.sh 脚本里面使用& 启动fabric-ca-server程序

su - root  -c  '/root/.zookeeper1/zookeeper.sh' > /dev/null 2>&1
su - adminca -c '/home/adminca/.postgres/rundb.sh'
su - root -c '/root/.kafka0/kafka.sh' > /dev/null 2>&1
cd /etc/hyperledger/fabric-ca-server
su - root -c '/root/.docker/docker-ca1/startca.sh' >>/dev/null 2>&1
cd /etc/hyperledger/fabric
su - root -c '/root/.docker/docker-orderer0/startorderer.sh' > /dev/null 2>&1
~                                                                                      



kafka测试：

创建topic
我们创建一个名称为test的Topic，2个分区，并且复制因子为2(表示数据保存2份)

./kafka/bin/kafka-topics.sh --create --zookeeper 172.26.19.75:2181  --replication-factor 2 --partitions 2 --topic stock
查看
./kafka/bin/kafka-topics.sh --list --zookeeper 172.26.19.75:2181

#查看相应Topic的情况
./kafka/bin/kafka-topics.sh --describe --zookeeper 172.26.19.75:2181 --topic stock


#发送消息
./kafka/bin/kafka-console-producer.sh --broker-list  172.26.19.75:9092 --topic stock


#接收消息
./kafka/bin/kafka-console-consumer.sh --zookeeper  172.26.19.75:2181 --topic stock  --from-beginning

+++++++++++++++++++++++++++++++++++++++++++++++++



fabric 官方版本：
https://hub.docker.com/u/hyperledger/

解决没有docker.sock文件问题：
vi /etc/init/docker.conf +46
 52         DOCKER_OPTS="-H unix:///var/run/docker.sock"
docker pull hyperledger/fabric-ccenv:x86_64-1.0.0-beta
 vi /etc/default/docker
DOCKER_OPTS="-H unix:///var/run/docker.sock"



docker-compost install 
liuhy liuhy # curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-
liuhy liuhy # chmod +x /usr/local/bin/docker-compose
liuhy liuhy # 

新版本：
curl -L https://github.com/docker/compose/releases/download/1.13.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose



docker abort:

liuhy@liuhy ~ $ docker run hello-world
docker: Cannot connect to the Docker daemon. Is the docker daemon running on this host?.


add:
sudo usermod -aG docker "liuhy"
newgrp docker



修改网卡地址：
/sbin/ifconfig eth0 hw ether 00:0C:29:36:97:20
使用lentern继续翻墙
sudo /sbin/ifconfig enp0s25 hw ether 56:7b:9d:9c:28:22
sudo /sbin/ifconfig enp0s25 hw ether 57:7b:9d:9c:28:22
sudo /sbin/ifconfig enp0s25 hw ether 58:7b:9d:9c:28:22
sudo /sbin/ifconfig enp2s0 hw ether 4c:cc:6a:c5:31:45

我台式机MAC
su - root sh -c '/sbin/ifconfig enp4s0  hw ether  20:23:24:dc:4c:f8'


查找删除文件：
find / -name "*.mp3" |xargs rm -rf



删除所有的docker镜像：
docker rmi $(docker images -q)
或者强制删除：
docker rmi -f $(docker images -q)

docker fabric
1.0.0的官方镜像在这里：https://hub.docker.com/r/hyperledger/




tar -xzf  apache-maven-3.3.9-bin.tar.gz  -C ./tmp   --strip-components 1



查看系统日志命令：
journalctl -xn' for details.


protoc --go_out=plugins=grpc:./gen-go taochees.proto

启动ca：
docker run -it  -p 8854:7054 yeasy/hyperledger-fabric-ca:latest  


进入容器：
docker exec -it vigilant_allen  /bin/bash


docker run -d -it  -p 8054:7054 yeasy/hyperledger-fabric-ca   /bin/bash


golang调试执行：
go build  -gcflags "-N -l"  -o appca fabric_ca.go base_setup.go 



升级docker-compose:
sudo curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose

sudo chmod +x /usr//bin/docker-compose

或者：
curl -L https://github.com/docker/compose/releases/download/{docker-compose.version}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose



下载版本兼容的docker 程序：
wget -qO- https://get.docker.com/ | sh

Docker安装完启动时提示Failed to start docker.service: Unit docker.service is masked.
Ubutntu安装完Docker后，执行

sudo service docker start
1
1
提示

Failed to start docker.service: Unit docker.service is masked.
解决方案：

执行如下三条指令

systemctl unmask docker.service
systemctl unmask docker.socket
systemctl start docker.service



____________________________________




编译fabric镜像：

http://blog.csdn.net/yeasy/article/details/53609814
http://www.tuicool.com/articles/iaYBreM

缺失的库，可以使用go get 获取bin目录下的二进制文件

1：
安装 go tools
执行
$ make gotools



go tools工具有： 建立目录bin 手动
liuhy@liuhy ~/work1 $ ll src/github.com/hyperledger/fabric/gotools/build/gopath/bin
total 47360
drwxr-xr-x 2 liuhy liuhy    4096 Jun  2 10:41 ./
drwxr-xr-x 5 liuhy liuhy    4096 Jun  2 10:20 ../
-rwxr-xr-x 1 liuhy liuhy 9641410 Jun  2 10:26 ginkgo*
-rwxr-xr-x 1 liuhy liuhy 4171098 Jun  2 10:40 gocov*
-rwxr-xr-x 1 liuhy liuhy 2499648 Jun  2 10:40 gocov-xml*
-rwxr-xr-x 1 liuhy liuhy 4749479 Jun  2 10:25 goimports*
-rwxr-xr-x 1 liuhy liuhy 5452331 Jun  2 10:20 golint*
-rwxr-xr-x 1 liuhy liuhy 9373500 Jun  2 10:20 govendor*
-rwxr-xr-x 1 liuhy liuhy 8465309 Jun  2 10:41 misspell*
-rwxr-xr-x 1 liuhy liuhy 4116778 Jun  2 10:25 protoc-gen-go*
liuhy@liuhy ~/work1 $ 



2：
语法格式检查
执行
$ make linter
cp -r gotools/build/gopath/bin ./build/docker/gotools/


换成docker中的绝对路径： 解决找不到goimports
/opt/gopath/src/github.com/hyperledger/fabric/gotools/build/gopath/bin/goimports

3：
编译 peer
执行
$ make peer
————————————————————————————————————————————————————————————————



启动ca：
docker run -it  -p 8854:7054 yeasy/hyperledger-fabric-ca:latest  


进入容器：
docker exec -it vigilant_allen  /bin/bash


docker run -d -it  -p 8054:7054 yeasy/hyperledger-fabric-ca   /bin/bash


golang调试执行：
go build  -gcflags "-N -l"  -o appca fabric_ca.go base_setup.go 



升级docker-compose:
sudo curl -L https://github.com/docker/compose/releases/download/1.10.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/bin/docker-compose

sudo chmod +x /usr//bin/docker-compose


下载版本兼容的docker 程序：
wget -qO- https://get.docker.com/ | sh

Docker安装完启动时提示Failed to start docker.service: Unit docker.service is masked.
Ubutntu安装完Docker后，执行

sudo service docker start
1
1
提示

Failed to start docker.service: Unit docker.service is masked.
解决方案：

执行如下三条指令

systemctl unmask docker.service
systemctl unmask docker.socket
systemctl start docker.service



